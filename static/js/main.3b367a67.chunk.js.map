{"version":3,"sources":["Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","useState","city","setCity","search","setSearch","country","setcountry","background","setBackground","weather","setWeather","useEffect","a","url","fetch","response","json","resJson","main","sys","map","item","i","fetchApi","className","type","placeholder","onChange","event","target","value","parseInt","temp","toFixed","temp_min","temp_max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA8FeA,EA3FC,WAChB,MAAqBC,mBAAS,MAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA2BJ,mBAAS,IAApC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAiCN,mBAAS,GAA1C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA2BR,mBAAS,MAApC,mBAAOS,EAAP,KAAeC,EAAf,KA8BI,OA3BJC,qBAAU,YACO,uCAAE,gCAAAC,EAAA,6DACTC,EADS,4DACgDV,EADhD,oDAEMW,MAAMD,GAFZ,cAETE,EAFS,gBAGMA,EAASC,OAHf,OAGTC,EAHS,OAKff,EAAQe,EAAQC,MAChBZ,EAAWW,EAAQE,KACjBF,EAAQC,MACVD,EAAQR,QAAQW,KAAI,SAACC,EAAMC,GAAP,OAGhBZ,EAAWW,EAAKH,SAKR,WAAVT,GAAgC,UAAVA,EACzBD,EAAc,GAEI,SAAVC,GAA8B,iBAAVA,GAAqC,SAAVA,GACvDD,EAAc,GApBE,4CAAF,qDAsBjBe,KAEG,CAACpB,EAAOM,IAGH,sBAAKe,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,SACA,gDAEA,sBAAKA,UAAwB,IAAbjB,EAAe,OAAO,OAAtC,UACA,uBAEI,sBAAKiB,UAAU,YAAf,UACA,mCAAK,8DACL,uBAAOC,KAAK,SAASD,UAAU,eAAeE,YAAY,sBAAsB,aAAW,WAAW,mBAAiB,eAGvIC,SAAU,SAACC,GAEPxB,EAAUwB,EAAMC,OAAOC,aAGX,uBAEE7B,GAAOI,EACL,qCAEJ,sBAAKmB,UAAU,eAAf,UACI,qBAAIA,UAAU,WAAd,UACI,mBAAGA,UAAU,4BADjB,KACkDrB,EADlD,KAC4DE,EAAQA,WAEpE,oBAAImB,UAAU,OAAd,SACI,oCACFO,SAAS9B,EAAK+B,KAAK,IAAI,SAASC,QAAQ,GADtC,WACmDxB,EADnD,SAIJ,qBAAIe,UAAU,cAAd,mBACOO,SAAS9B,EAAKiC,SAAS,IAAI,SAASD,QAAQ,GADnD,2BACoFF,SAAS9B,EAAKkC,SAAS,IAAI,SAASF,QAAQ,GADhI,eAKJ,qBAAKT,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,mBAGnB,oBAAIA,UAAU,KAAd,kCCrEGY,MARf,WACE,OACE,mCACC,cAAC,EAAD,OCMUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.3b367a67.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\n\r\nimport './Weather.css';\r\nconst Weather = () => {\r\nconst [city,setCity]=useState(null);//changes in search bar\r\nconst [search,setSearch]=useState('');//store changes after enter is pressed\r\nconst [country,setcountry]=useState('');\r\nconst [background,setBackground]=useState(1);//1-clouds 2- rain /thunderstrom\r\nconst [weather,setWeather]=useState(null);\r\n\r\n//const\r\nuseEffect(() => {\r\n   const fetchApi=(async()=>{\r\n    const url=`https://api.openweathermap.org/data/2.5/weather?q=${search}&appid=2b0d9a03a75c2f4da5fbbed3e957232b`;\r\n    const response=await fetch(url);\r\n    const resJson= await response.json();\r\n    \r\n    setCity(resJson.main);\r\n    setcountry(resJson.sys);\r\n   if(resJson.main){\r\n    resJson.weather.map((item, i) => (\r\n        //console.log(item.main)\r\n    \r\n        setWeather(item.main)\r\n       \r\n    )\r\n    )   \r\n   }\r\n   if(weather==='Clouds' || weather==='Clear'){\r\n   setBackground(1);\r\n   }\r\n   else if(weather==='Rain' || weather==='Thunderstrom' ||weather==='Mist')\r\n   setBackground(2);\r\n   })\r\nfetchApi();\r\n// eslint-disable-next-line\r\n}, [search,weather])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='title'>\r\n            <h1>Weather App </h1>\r\n            </div>\r\n            <div className={background===1?'box1':'box2' }>\r\n            <br/>\r\n            \r\n                <div className='searchbar'>\r\n                <h3> <center>Enter the City name: </center></h3>\r\n                <input type=\"search\" className=\"form-control\" placeholder=\"Enter the city name\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" \r\n\r\n      \r\nonChange={(event) => {\r\n\r\n    setSearch(event.target.value)\r\n}} />\r\n                </div>\r\n                <br />\r\n              \r\n                {(city &&country)?(\r\n                    <>\r\n\r\n                <div className='weather-info'>\r\n                    <h2 className='location'>\r\n                        <i className=\"fa fa-street-view fa-3x\"></i>  {search}, {country.country}\r\n                    </h2>\r\n                    <h1 className='temp'>\r\n                        <center>\r\n                    {(parseInt(city.temp,10)-271.152).toFixed(2)}&#8451; ({weather})\r\n                    </center>\r\n                    </h1>\r\n                    <h3 className='temp_minmax'>\r\n                    Min: {(parseInt(city.temp_min,10)-271.152).toFixed(2)}&#8451; &nbsp;| &nbsp; Max: {(parseInt(city.temp_max,10)-271.152).toFixed(2)}&#8451; \r\n                    </h3>\r\n                   \r\n                </div>\r\n                <div className='wave -one'></div>\r\n                <div className='wave -two'></div>\r\n                <div className='wave -three'></div>\r\n                </>\r\n                ):\r\n           (<h3 className='no'>No data found</h3> )\r\n\r\n                \r\n            \r\n            }\r\n             \r\n            </div>\r\n            \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","\nimport Weather from './Weather';\n\nfunction App() {\n  return (\n    <>\n     <Weather/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}